openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/activate/{token}/:
    get:
      operationId: accounts_activate_retrieve
      description: Activates a user account using the token sent by email
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationResponse'
          description: ''
  /accounts/password-reset/request/:
    post:
      operationId: accounts_password_reset_request_create
      description: Requests a password reset OTP sent via email
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetResponse'
          description: ''
  /accounts/password-reset/verify/:
    post:
      operationId: accounts_password_reset_verify_create
      description: Verifies reset OTP and sets a new password
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationResponse'
          description: ''
  /accounts/profiles/:
    get:
      operationId: accounts_profiles_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileList'
          description: ''
  /accounts/profiles/me/:
    get:
      operationId: accounts_profiles_me_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: accounts_profiles_me_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: accounts_profiles_me_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: accounts_profiles_me_destroy
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /correspondents/:
    get:
      operationId: correspondents_list
      tags:
      - correspondents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Correspondent'
          description: ''
    post:
      operationId: correspondents_create
      tags:
      - correspondents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Correspondent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Correspondent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Correspondent'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondent'
          description: ''
  /correspondents/{id}/:
    get:
      operationId: correspondents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this correspondent.
        required: true
      tags:
      - correspondents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondent'
          description: ''
    put:
      operationId: correspondents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this correspondent.
        required: true
      tags:
      - correspondents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Correspondent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Correspondent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Correspondent'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondent'
          description: ''
    patch:
      operationId: correspondents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this correspondent.
        required: true
      tags:
      - correspondents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCorrespondent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCorrespondent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCorrespondent'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Correspondent'
          description: ''
    delete:
      operationId: correspondents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this correspondent.
        required: true
      tags:
      - correspondents
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /document-type/:
    get:
      operationId: document_type_list
      tags:
      - document-type
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentType'
          description: ''
    post:
      operationId: document_type_create
      tags:
      - document-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentType'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
          description: ''
  /document-type/{id}/:
    get:
      operationId: document_type_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document type.
        required: true
      tags:
      - document-type
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
          description: ''
    put:
      operationId: document_type_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document type.
        required: true
      tags:
      - document-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentType'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
          description: ''
    patch:
      operationId: document_type_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document type.
        required: true
      tags:
      - document-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentType'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
          description: ''
    delete:
      operationId: document_type_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document type.
        required: true
      tags:
      - document-type
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /documents/:
    get:
      operationId: documents_list
      parameters:
      - in: query
        name: created_max
        schema:
          type: string
          format: date
      - in: query
        name: created_min
        schema:
          type: string
          format: date
      - in: query
        name: document_type
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentListList'
          description: ''
    post:
      operationId: documents_create
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostDocument'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDocument'
          description: ''
  /documents/{id}/:
    get:
      operationId: documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ''
    put:
      operationId: documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentDetail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ''
    patch:
      operationId: documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentDetail'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
          description: ''
    delete:
      operationId: documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /documents/{id}/download-archive/:
    get:
      operationId: documents_download_archive_retrieve
      description: Download the document's archive file
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /documents/{id}/download-original/:
    get:
      operationId: documents_download_original_retrieve
      description: Download the document's original file
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: ''
  /notes/:
    get:
      operationId: notes_list
      parameters:
      - in: query
        name: document
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - notes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notes'
          description: ''
    post:
      operationId: notes_create
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notes'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
          description: ''
  /notes/{id}/:
    get:
      operationId: notes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - notes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
          description: ''
    put:
      operationId: notes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notes'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
          description: ''
    patch:
      operationId: notes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotes'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes'
          description: ''
    delete:
      operationId: notes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - notes
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /projects/:
    get:
      operationId: projects_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date_max
        schema:
          type: string
          format: date
      - in: query
        name: start_date_min
        schema:
          type: string
          format: date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - in_progress
          - on_hold
          - pending
          - unknown
        description: |-
          * `pending` - Pending
          * `in_progress` - In Progress
          * `completed` - Completed
          * `on_hold` - On Hold
          * `cancelled` - Cancelled
          * `unknown` - Unknown
      tags:
      - projects
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /tags/:
    get:
      operationId: tags_list
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /tags/{id}/:
    get:
      operationId: tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActivationResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
      - message
      - status
    Correspondent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    DocumentDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            type: integer
        created_date:
          type: string
          readOnly: true
        page_count:
          type: integer
          readOnly: true
          nullable: true
          description: The number of pages of the document.
        correspondent:
          type: integer
          nullable: true
        added_date:
          type: string
          readOnly: true
        modified_date:
          type: string
          readOnly: true
        project:
          type: integer
          nullable: true
        project_display:
          allOf:
          - $ref: '#/components/schemas/ProjectList'
          readOnly: true
        document_type:
          type: integer
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Notes'
          readOnly: true
      required:
      - added_date
      - correspondent
      - created_date
      - document_type
      - id
      - modified_date
      - notes
      - page_count
      - project
      - project_display
      - tags
    DocumentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            type: integer
        created_date:
          type: string
          readOnly: true
        page_count:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: The number of pages of the document.
        thumbnail_str:
          type: string
          readOnly: true
      required:
      - created_date
      - id
      - thumbnail_str
    DocumentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    Notes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        note:
          type: string
          title: Content
          description: Note for the document
        document:
          type: integer
          writeOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created
      - document
      - id
      - user
    PaginatedDocumentListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentList'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        token:
          type: string
      required:
      - message
      - status
      - token
    PasswordResetVerify:
      type: object
      properties:
        token:
          type: string
        otp:
          type: string
        new_password:
          type: string
          writeOnly: true
      required:
      - new_password
      - otp
      - token
    PatchedCorrespondent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedDocumentDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            type: integer
        created_date:
          type: string
          readOnly: true
        page_count:
          type: integer
          readOnly: true
          nullable: true
          description: The number of pages of the document.
        correspondent:
          type: integer
          nullable: true
        added_date:
          type: string
          readOnly: true
        modified_date:
          type: string
          readOnly: true
        project:
          type: integer
          nullable: true
        project_display:
          allOf:
          - $ref: '#/components/schemas/ProjectList'
          readOnly: true
        document_type:
          type: integer
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Notes'
          readOnly: true
    PatchedDocumentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedNotes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        note:
          type: string
          title: Content
          description: Note for the document
        document:
          type: integer
          writeOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        full_name:
          type: string
          readOnly: true
        profile_pic:
          type: string
          nullable: true
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          nullable: true
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        color:
          type: string
          pattern: ^#(?:[0-9a-fA-F]{6})$
          maxLength: 7
    PostDocument:
      type: object
      properties:
        created:
          type: string
          format: date-time
          writeOnly: true
          nullable: true
        document:
          type: string
          format: uri
          writeOnly: true
        title:
          type: string
          writeOnly: true
        correspondent:
          type: integer
          writeOnly: true
          nullable: true
        document_type:
          type: integer
          writeOnly: true
          nullable: true
        tags:
          type: array
          items:
            type: integer
            writeOnly: true
            title: Tags
          writeOnly: true
        project:
          type: integer
          writeOnly: true
      required:
      - document
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        full_name:
          type: string
          readOnly: true
        profile_pic:
          type: string
          nullable: true
      required:
      - full_name
      - id
      - user
    ProfileList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        profile_pic:
          type: string
          nullable: true
      required:
      - full_name
      - id
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
          nullable: true
      required:
      - id
      - status_display
      - title
    ProjectList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
      required:
      - id
      - title
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$
        password_confirm:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - password_confirm
      - username
    StatusEnum:
      enum:
      - pending
      - in_progress
      - completed
      - on_hold
      - cancelled
      - unknown
      type: string
      description: |-
        * `pending` - Pending
        * `in_progress` - In Progress
        * `completed` - Completed
        * `on_hold` - On Hold
        * `cancelled` - Cancelled
        * `unknown` - Unknown
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        color:
          type: string
          pattern: ^#(?:[0-9a-fA-F]{6})$
          maxLength: 7
      required:
      - color
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
